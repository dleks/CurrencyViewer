//
//  RateViewController.swift
//  CurrencyViewer
//
//  Created by Dmitrii Leksashov on 28/05/2019.
//  Copyright (c) 2019 Dmitrii Leksashov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RateDisplayLogic: class {
    func displayRateInfo(viewModel: Rate.Info.ViewModel)
    func displayNoneRate(viewModel: Rate.ErrorInfo.ViewModel)
}

class RateViewController: UIViewController{
    var interactor: RateBusinessLogic?
    var router: (NSObjectProtocol & RateRoutingLogic & RateDataPassing)?
    
    @IBOutlet private var dateLabel: UILabel!
    @IBOutlet private var dollarLabel: UILabel!
    @IBOutlet private var euroLabel: UILabel!
    @IBOutlet private var rateStackView: UIStackView!
    @IBOutlet private var noneLabel: UILabel!
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = RateInteractor()
        let presenter = RatePresenter()
        let router = RateRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        noneLabel.isHidden = true
        rateStackView.isHidden = true
        let request = Rate.Info.Request()
        interactor?.prepareRateInfo(request: request)
    }
}

// MARK: RateDisplayLogic
extension RateViewController: RateDisplayLogic {
    func displayRateInfo(viewModel: Rate.Info.ViewModel) {
        rateStackView.isHidden = viewModel.isRateInfoHidden
        dateLabel.text = viewModel.date
        dollarLabel.text = viewModel.dollar
        euroLabel.text = viewModel.euro
    }
    
    func displayNoneRate(viewModel: Rate.ErrorInfo.ViewModel) {
        noneLabel.text = viewModel.text
        rateStackView.isHidden = viewModel.isRateInfoHidden
        noneLabel.isHidden = viewModel.isNoneLabelHidden
    }
}
